{"version":3,"sources":["../node_modules/@aws-amplify/ui-components/dist/esm-es5 lazy /^/.*/.entry/.js$/ include: /.entry/.js$/ exclude: /.system/.entry/.js$/ groupOptions: {} namespace object","utils/index.js","utils/request.js","utils/gateway.js","components/CameraHelp.js","components/Icon.js","components/EngagementsSummary.js","components/RekognitionButton.js","components/AddUserModal.js","components/Header.js","components/SettingsHelp.js","App.js","serviceWorker.js","index.js"],"names":["map","webpackAsyncContext","req","__webpack_require__","o","Promise","resolve","then","e","Error","code","ids","id","keys","Object","module","exports","retryWrapper","p","timeout","retryN","reject","catch","t","RETRY_START","r","console","log","setTimeout","isEmpty","x","isUndefined","Array","isArray","length","trim","settings","window","rekognitionSettings","region","Amplify","configure","Auth","identityPoolId","cognitoIdentityPool","mandatorySignIn","userPoolId","cognitoUserPoolId","userPoolWebClientId","cognitoUserPoolClientId","API","endpoints","name","endpoint","apiGateway","custom_header","a","currentSession","session","token","getIdToken","getJwtToken","Authorization","url","method","data","body","undefined","headers","addUser","params","request","image","fullName","processImage","props","currentUrl","location","href","show","Row","Col","md","type","size","SVGWrapper","children","xmlns","viewBox","focusable","aria-hidden","width","height","className","cx","cy","stroke","fill","strokeWidth","d","testResults","test","index","Card","style","marginTop","textAlign","key","Header","Icon","Success","TestName","Body","Text","Details","enabled","onClick","useState","started","setStarted","Button","variant","disabled","onSave","formState","setFormState","setFullName","setImage","setShow","submitClicked","setSubmitClicked","isImageValid","isFullNameValid","isFormValid","toggle","reset","validationAttributes","isValid","isInvalid","Modal","onHide","closeButton","Title","Alert","display","Form","Group","controlId","Label","Control","placeholder","value","onChange","target","file","reader","FileReader","readAsDataURL","onload","result","split","onerror","files","Footer","preventDefault","readyToStream","signedIn","toggleRekognition","authError","setAuthError","userEmail","setUserEmail","useEffect","currentAuthenticatedUser","user","username","Navbar","bg","expand","Brand","Toggle","Collapse","Nav","reload","RekognitionButton","AddUserModal","rel","authState","setAuthState","setReadyToStream","setTestResults","iterating","useRef","webcam","onAuthUIStateChange","s","gateway","current","getSnapshot","b64Encoded","getScreenshot","response","SettingsHelp","CameraHelp","sm","ref","instance","checkIfReady","state","hasUserMedia","screenshotFormat","videoConstraints","facingMode","usernameAlias","slot","headerText","formFields","label","required","inputProps","autoComplete","Boolean","hostname","match","ReactDOM","render","App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.28cf5ca1.chunk.js","sourcesContent":["var map = {\n\t\"./amplify-amazon-button_5.entry.js\": [\n\t\t252,\n\t\t7\n\t],\n\t\"./amplify-auth-fields_9.entry.js\": [\n\t\t253,\n\t\t8\n\t],\n\t\"./amplify-authenticator.entry.js\": [\n\t\t254,\n\t\t9\n\t],\n\t\"./amplify-button_3.entry.js\": [\n\t\t255,\n\t\t10\n\t],\n\t\"./amplify-checkbox.entry.js\": [\n\t\t256,\n\t\t11\n\t],\n\t\"./amplify-confirm-sign-in_8.entry.js\": [\n\t\t257,\n\t\t12\n\t],\n\t\"./amplify-container.entry.js\": [\n\t\t258,\n\t\t13\n\t],\n\t\"./amplify-federated-buttons_2.entry.js\": [\n\t\t259,\n\t\t14\n\t],\n\t\"./amplify-federated-sign-in.entry.js\": [\n\t\t260,\n\t\t15\n\t],\n\t\"./amplify-form-field_4.entry.js\": [\n\t\t261,\n\t\t16\n\t],\n\t\"./amplify-greetings.entry.js\": [\n\t\t262,\n\t\t17\n\t],\n\t\"./amplify-icon-button.entry.js\": [\n\t\t263,\n\t\t18\n\t],\n\t\"./amplify-icon.entry.js\": [\n\t\t264,\n\t\t4\n\t],\n\t\"./amplify-link.entry.js\": [\n\t\t265,\n\t\t19\n\t],\n\t\"./amplify-nav_2.entry.js\": [\n\t\t266,\n\t\t20\n\t],\n\t\"./amplify-radio-button_2.entry.js\": [\n\t\t267,\n\t\t21\n\t],\n\t\"./amplify-select-mfa-type.entry.js\": [\n\t\t268,\n\t\t22\n\t],\n\t\"./amplify-sign-in-button.entry.js\": [\n\t\t269,\n\t\t5\n\t],\n\t\"./amplify-tooltip.entry.js\": [\n\t\t270,\n\t\t23\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn __webpack_require__.e(ids[1]).then(function() {\n\t\treturn __webpack_require__(id);\n\t});\n}\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = 245;\nmodule.exports = webpackAsyncContext;","const MAX_RETRIES = 3;\r\nconst RETRY_START = 1000;\r\n\r\nexport const retryWrapper = (p, timeout, retryN) =>\r\n  new Promise((resolve, reject) =>\r\n    p()\r\n      .then(resolve)\r\n      .catch((e) => {\r\n        if (retryN === MAX_RETRIES) return reject(e);\r\n        const t = (timeout || RETRY_START / 2) * 2;\r\n        const r = (retryN || 0) + 1;\r\n        console.log(`Retry n. ${r} in ${t / 1000}s...`);\r\n        setTimeout(() => retryWrapper(p, t, r).then(resolve).catch(reject), t);\r\n      })\r\n  );\r\n\r\nexport const isUndefined = (x) => typeof x === \"undefined\";\r\n\r\nexport const isEmpty = (x) =>\r\n  x === null ||\r\n  isUndefined(x) ||\r\n  (Array.isArray(x)\r\n    ? x.length === 0\r\n    : typeof x === \"string\"\r\n    ? x.trim() === \"\"\r\n    : false);\r\n","import Amplify, { API, Auth } from \"aws-amplify\";\r\nimport { retryWrapper } from \"./index\";\r\n\r\nconst settings = window.rekognitionSettings || {};\r\nconst region = settings.region || \"eu-west-1\";\r\n\r\nAmplify.configure({\r\n  Auth: {\r\n    identityPoolId: settings.cognitoIdentityPool,\r\n    region,\r\n    mandatorySignIn: true,\r\n    userPoolId: settings.cognitoUserPoolId,\r\n    userPoolWebClientId: settings.cognitoUserPoolClientId,\r\n  },\r\n  API: {\r\n    endpoints: [\r\n      {\r\n        name: \"apiGateway\",\r\n        endpoint: settings.apiGateway,\r\n        region,\r\n        custom_header: async () => {\r\n          const session = await Auth.currentSession();\r\n          const token = session.getIdToken().getJwtToken();\r\n          return { Authorization: `Bearer ${token}` };\r\n        },\r\n      },\r\n    ],\r\n  },\r\n});\r\n\r\nexport default (url, method, data) =>\r\n  retryWrapper(() =>\r\n    API[method || \"get\"](\"apiGateway\", url, {\r\n      body: data || undefined,\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n    })\r\n  );\r\n","import request from \"./request\";\r\n\r\nexport default {\r\n  addUser(params) {\r\n    return request(\"/faces/index\", \"post\", {\r\n      image: params.image,\r\n      fullName: params.fullName,\r\n    });\r\n  },\r\n\r\n  processImage(image) {\r\n    return request(\"/process\", \"post\", { image });\r\n  },\r\n};\r\n","import React from \"react\";\r\nimport { Col, Row } from \"react-bootstrap\";\r\n\r\nexport default props => {\r\n  const currentUrl = window.location.href;\r\n  if (props.show) {\r\n    return (\r\n      <Row>\r\n        <Col md={12}>\r\n          <br />\r\n          <strong>Please allow required permissions to continue</strong>\r\n          When prompted, you need to click <i>Allow</i> to use the application\r\n          with your webcamera.\r\n          <br />\r\n          If you don't see the dialog, try{\" \"}\r\n          <a href={currentUrl}>opening the application</a> in a new incognito\r\n          window, or review your webcam settings on your browser.\r\n        </Col>\r\n      </Row>\r\n    );\r\n  }\r\n  return \"\";\r\n};\r\n","import React from \"react\";\r\n\r\nexport default ({ type, size }) => {\r\n  size = size || \"16\";\r\n\r\n  const SVGWrapper = ({ children }) => (\r\n    <svg\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n      viewBox={`0 0 ${size} ${size}`}\r\n      focusable=\"false\"\r\n      aria-hidden=\"true\"\r\n      width={size}\r\n      height={size}\r\n    >\r\n      {children}\r\n    </svg>\r\n  );\r\n\r\n  if (type === \"fail\")\r\n    return (\r\n      <SVGWrapper size={size}>\r\n        <circle\r\n          className=\"stroke-linejoin-round\"\r\n          cx=\"8\"\r\n          cy=\"8\"\r\n          r=\"7\"\r\n          stroke=\"#d13212\"\r\n          fill=\"none\"\r\n          strokeWidth=\"2px\"\r\n        />\r\n        <path\r\n          d=\"M10.828 5.172l-5.656 5.656M10.828 10.828L5.172 5.172\"\r\n          stroke=\"#d13212\"\r\n          fill=\"none\"\r\n          strokeWidth=\"2px\"\r\n        />\r\n      </SVGWrapper>\r\n    );\r\n\r\n  if (type === \"success\")\r\n    return (\r\n      <SVGWrapper>\r\n        <circle\r\n          className=\"stroke-linejoin-round\"\r\n          cx=\"8\"\r\n          cy=\"8\"\r\n          r=\"7\"\r\n          stroke=\"#1d8102\"\r\n          fill=\"none\"\r\n          strokeWidth=\"2px\"\r\n        />\r\n        <path\r\n          className=\"stroke-linecap-square\"\r\n          d=\"M5 8l2 2 3.521-3.521\"\r\n          stroke=\"#1d8102\"\r\n          fill=\"none\"\r\n          strokeWidth=\"2px\"\r\n        />\r\n      </SVGWrapper>\r\n    );\r\n\r\n  return \"\";\r\n};\r\n","import React from \"react\";\r\nimport { Card } from \"react-bootstrap\";\r\n\r\nimport Icon from \"./Icon\";\r\n\r\nexport default ({ testResults }) => (\r\n  <div className=\"tests-container\">\r\n    {testResults.map((test, index) => (\r\n      <Card style={{ marginTop: \"20px\", textAlign: \"left\" }} key={index}>\r\n        <Card.Header>\r\n          <Icon type={test.Success ? \"success\" : \"fail\"} />\r\n          {test.TestName}\r\n        </Card.Header>\r\n        <Card.Body>\r\n          <Card.Text>{test.Details}</Card.Text>\r\n        </Card.Body>\r\n      </Card>\r\n    ))}\r\n  </div>\r\n);\r\n","import React, { useState } from \"react\";\r\nimport { Button } from \"react-bootstrap\";\r\n\r\nexport default ({ enabled, onClick }) => {\r\n  const [started, setStarted] = useState(false);\r\n\r\n  return (\r\n    <Button\r\n      variant={started ? \"danger\" : \"success\"}\r\n      onClick={(e) => {\r\n        setStarted(!started);\r\n        onClick(e);\r\n      }}\r\n      disabled={!enabled}\r\n      size=\"sm\"\r\n    >\r\n      {started ? \"Stop\" : \"Start\"} Rekognition Engine\r\n    </Button>\r\n  );\r\n};\r\n","import React, { useState } from \"react\";\r\nimport { Alert, Button, Form, Modal } from \"react-bootstrap\";\r\n\r\nimport { isEmpty } from \"../utils\";\r\n\r\nexport default ({ onSave }) => {\r\n  const [formState, setFormState] = useState(\"initial\");\r\n  const [fullName, setFullName] = useState(\"\");\r\n  const [image, setImage] = useState(undefined);\r\n  const [show, setShow] = useState(false);\r\n  const [submitClicked, setSubmitClicked] = useState(false);\r\n\r\n  const isImageValid = !isEmpty(image);\r\n  const isFullNameValid = !isEmpty(fullName);\r\n  const isFormValid = isImageValid && isFullNameValid;\r\n\r\n  const processImage = (file) => {\r\n    const reader = new FileReader();\r\n    reader.readAsDataURL(file);\r\n    reader.onload = () => setImage(reader.result.split(\",\")[1]);\r\n    reader.onerror = () => setFormState(\"error\");\r\n  };\r\n\r\n  const submitForm = (e) => {\r\n    setSubmitClicked(true);\r\n    if (isFormValid) {\r\n      setFormState(\"saving\");\r\n      e.preventDefault();\r\n      onSave({ fullName, image })\r\n        .then(() => setFormState(\"saved\"))\r\n        .catch(() => setFormState(\"error\"));\r\n    }\r\n  };\r\n\r\n  const toggle = (reset) => {\r\n    setShow(!show);\r\n    if (reset) {\r\n      setFormState(\"initial\");\r\n      setFullName(\"\");\r\n      setImage(undefined);\r\n    }\r\n  };\r\n\r\n  const validationAttributes = (isValid) =>\r\n    !submitClicked ? {} : isValid ? { isValid: true } : { isInvalid: true };\r\n\r\n  return (\r\n    <>\r\n      <Button onClick={() => toggle(true)} size=\"sm\">\r\n        Add a new user\r\n      </Button>\r\n      <Modal show={show} onHide={toggle}>\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>Add a new user</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <p>\r\n            By uploading a picture and associating it with a name, Amazon\r\n            Rekognition can recognize that person.\r\n          </p>\r\n          <hr />\r\n          <Alert\r\n            variant=\"warning\"\r\n            style={{\r\n              display: formState === \"saving\" ? \"block\" : \"none\",\r\n            }}\r\n          >\r\n            Please wait\r\n          </Alert>\r\n          <Alert\r\n            variant=\"danger\"\r\n            style={{\r\n              display: formState === \"error\" ? \"block\" : \"none\",\r\n            }}\r\n          >\r\n            An error happened. Retry.\r\n          </Alert>\r\n          <Alert\r\n            variant=\"success\"\r\n            style={{\r\n              display: formState === \"saved\" ? \"block\" : \"none\",\r\n            }}\r\n          >\r\n            The user has been added.\r\n          </Alert>\r\n          <form\r\n            style={{\r\n              display: formState === \"initial\" ? \"block\" : \"none\",\r\n            }}\r\n          >\r\n            <Form.Group controlId=\"fullName\">\r\n              <Form.Label>Full Name</Form.Label>\r\n              <Form.Control\r\n                type=\"text\"\r\n                placeholder=\"Full Name e.g. Jane Doe\"\r\n                value={fullName}\r\n                onChange={(e) => setFullName(e.target.value)}\r\n                {...validationAttributes(isFullNameValid)}\r\n              />\r\n            </Form.Group>\r\n            <Form.Group controlId=\"image\">\r\n              <Form.Label>User Image</Form.Label>\r\n              <Form.Control\r\n                type=\"file\"\r\n                onChange={(e) => processImage(e.target.files[0])}\r\n                {...validationAttributes(isImageValid)}\r\n              />\r\n            </Form.Group>\r\n          </form>\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button\r\n            onClick={submitForm}\r\n            variant=\"primary\"\r\n            type=\"submit\"\r\n            disabled={!fullName || !image || formState !== \"initial\"}\r\n            show=\"false\"\r\n          >\r\n            Add User\r\n          </Button>\r\n          <Button onClick={toggle}>Close</Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\n","import { Auth } from \"aws-amplify\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { Button, Nav, Navbar } from \"react-bootstrap\";\r\n\r\nimport { retryWrapper } from \"../utils\";\r\n\r\nimport RekognitionButton from \"./RekognitionButton\";\r\n\r\nimport \"./Header.css\";\r\nimport AddUserModal from \"./AddUserModal\";\r\n\r\nexport default ({ addUser, readyToStream, signedIn, toggleRekognition }) => {\r\n  const [authError, setAuthError] = useState(null);\r\n  const [userEmail, setUserEmail] = useState(undefined);\r\n\r\n  const reload = () => window.location.reload();\r\n\r\n  useEffect(() => {\r\n    if (signedIn) {\r\n      retryWrapper(() => Auth.currentAuthenticatedUser())\r\n        .then((user) => setUserEmail(user.username))\r\n        .catch(setAuthError);\r\n    }\r\n  }, [signedIn]);\r\n\r\n  return (\r\n    <Navbar bg=\"dark\" expand=\"lg\">\r\n      <Navbar.Brand>\r\n        <div className=\"logo\">\r\n            TY52 Test App\r\n        </div>\r\n      </Navbar.Brand>\r\n      <Navbar.Toggle />\r\n      {(userEmail || authError) && (\r\n        <Navbar.Collapse className=\"justify-content-end\">\r\n          <Nav>\r\n            {authError && (\r\n              <>\r\n                <span className=\"auth-error\">\r\n                  Authentication error: {authError}\r\n                </span>\r\n                <Button variant=\"link\" className=\"headerLink\" onClick={reload}>\r\n                  Retry\r\n                </Button>\r\n              </>\r\n            )}\r\n            {userEmail && (\r\n              <>\r\n                <RekognitionButton\r\n                  onClick={toggleRekognition}\r\n                  enabled={readyToStream}\r\n                />\r\n                <AddUserModal onSave={addUser} />\r\n              </>\r\n            )}\r\n          </Nav>\r\n        </Navbar.Collapse>\r\n      )}\r\n    </Navbar>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { Alert, Row } from \"react-bootstrap\";\r\n\r\nexport default ({ show }) => {\r\n  if (show) {\r\n    return (\r\n      <Row>\r\n        <Alert variant=\"danger\">\r\n          There is an issue with your settings configuration. If you are running\r\n          the front-end code from your local machine, you may need to follow{\" \"}\r\n          <a\r\n            href=\"https://rajrajhans.com/\"\r\n            rel=\"noopener noreferrer\"\r\n            target=\"_blank\"\r\n          >\r\n            this guide\r\n          </a>\r\n          .\r\n        </Alert>\r\n      </Row>\r\n    );\r\n  }\r\n  return \"\";\r\n};\r\n","import React, { useEffect, useRef, useState } from \"react\";\r\nimport { AmplifyAuthenticator, AmplifySignIn } from \"@aws-amplify/ui-react\";\r\nimport { onAuthUIStateChange } from \"@aws-amplify/ui-components\";\r\nimport Webcam from \"react-webcam\";\r\nimport { Col, Row } from \"react-bootstrap\";\r\n\r\nimport gateway from \"./utils/gateway\";\r\n\r\nimport CameraHelp from \"./components/CameraHelp\";\r\nimport EngagementSummary from \"./components/EngagementsSummary\";\r\nimport Header from \"./components/Header\";\r\nimport SettingsHelp from \"./components/SettingsHelp\";\r\n\r\nexport default () => {\r\n  const [authState, setAuthState] = useState(undefined);\r\n  const [readyToStream, setReadyToStream] = useState(false);\r\n  const [testResults, setTestResults] = useState([]);\r\n  const iterating = useRef(false);\r\n  const webcam = useRef(undefined);\r\n\r\n  const addUser = (params) => gateway.addUser(params);\r\n\r\n  const getSnapshot = () => {\r\n    const image = webcam.current.getScreenshot();\r\n    const b64Encoded = image.split(\",\")[1];\r\n\r\n    gateway.processImage(b64Encoded).then((response) => {\r\n      if (response) setTestResults(response);\r\n      if (iterating.current) setTimeout(getSnapshot, 300);\r\n      else setTestResults([]);\r\n    });\r\n  };\r\n\r\n  const setupWebcam = (instance) => {\r\n    webcam.current = instance;\r\n\r\n    const checkIfReady = () => {\r\n      if (\r\n        webcam.current &&\r\n        webcam.current.state &&\r\n        webcam.current.state.hasUserMedia\r\n      ) {\r\n        setReadyToStream(true);\r\n      } else setTimeout(checkIfReady, 250);\r\n    };\r\n\r\n    checkIfReady();\r\n  };\r\n\r\n  const toggleRekognition = () => {\r\n    iterating.current = !iterating.current;\r\n\r\n    if (iterating.current) {\r\n      getSnapshot();\r\n    } else setTestResults([]);\r\n  };\r\n\r\n  useEffect(() => {\r\n    return onAuthUIStateChange((s) => setAuthState(s));\r\n  }, []);\r\n\r\n  const signedIn = authState === \"signedin\";\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <Header\r\n        addUser={addUser}\r\n        readyToStream={readyToStream}\r\n        signedIn={signedIn}\r\n        toggleRekognition={toggleRekognition}\r\n      />\r\n      {signedIn ? (\r\n        <>\r\n          <SettingsHelp show={!window.rekognitionSettings} />\r\n          <CameraHelp show={!readyToStream} />\r\n          <Row>\r\n            <Col md={8} sm={6}>\r\n              <Webcam\r\n                ref={setupWebcam}\r\n                screenshotFormat=\"image/jpeg\"\r\n                videoConstraints={{\r\n                  width: 1280,\r\n                  height: 640,\r\n                  facingMode: \"user\",\r\n                }}\r\n                style={{ width: \"100%\", marginTop: \"10px\" }}\r\n              />\r\n            </Col>\r\n            <Col md={4} sm={6}>\r\n              <EngagementSummary testResults={testResults} />\r\n            </Col>\r\n          </Row>\r\n        </>\r\n      ) : (\r\n        <div className=\"amplify-auth-container\">\r\n          <AmplifyAuthenticator usernameAlias=\"email\">\r\n            <AmplifySignIn\r\n              slot=\"sign-in\"\r\n              usernameAlias=\"email\"\r\n              headerText=\"Sign In to Anti Cheat System Demo\"\r\n              formFields={[\r\n                {\r\n                  type: \"email\",\r\n                  label: \"Username\",\r\n                  placeholder: \"Enter your username\",\r\n                  required: true,\r\n                  inputProps: { autoComplete: \"off\" },\r\n                },\r\n                {\r\n                  type: \"password\",\r\n                  label: \"Password\",\r\n                  placeholder: \"Enter your password\",\r\n                  required: true,\r\n                  inputProps: { autoComplete: \"off\" },\r\n                },\r\n              ]}\r\n            >\r\n              <div slot=\"secondary-footer-content\"></div>\r\n            </AmplifySignIn>\r\n          </AmplifyAuthenticator>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}